@*<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay">*@
    @*<div class="modal-dialog @GetModalSize()" role="document">*@
    @*<div class="modal-dialog modal-xl" role="document">*@
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">@Title</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (Body == null)
                {
                    @ChildContent
                }
                else
                {
                    @Body
                }
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-primary">Save changes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>*@
                @Footer
            </div>
        </div>
    @*</div>*@
@*</div>*@

@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    private string modalDisplay = "block;";
    private string modalClass = "Show";
    private bool showBackdrop = false;

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public ModalSize Size { get; set; } = ModalSize.Default;

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }


    public void Open()
    {
        modalDisplay = "block;";
        modalClass = "Show";
        showBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        modalDisplay = "none";
        modalClass = "";
        showBackdrop = false;
        StateHasChanged();
    }

    private string GetModalSize()
    {
        switch (Size)
        {
            case ModalSize.Small:
                return "modal-sm";
            case ModalSize.Large:
                return "modal-lg";
            case ModalSize.ExtraLarge:
                return "modal-xl";
            case ModalSize.Default:
            default:
                return string.Empty;
        }
    }
}